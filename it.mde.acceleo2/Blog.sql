-- GENERATED CREATE TABLE STATMENT FOR THE ENTITY User
CREATE TABLE User (
	id VARCHAR(255),
	name VARCHAR(255),
	email VARCHAR(255),
	username VARCHAR(255),
	password VARCHAR(255),
	PRIMARY KEY (id)
);
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY User (NO REFERENCES)
SELECT id, name, email, username, password FROM User;
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY User (NO REFERENCES) WHERE THE PRIMARY KEY IS EQUAL TO SOMETHING
SELECT id, name, email, username, password FROM User WHERE id = ?;
-- GENERATED CREATE TABLE STATMENT FOR THE ENTITY Post
CREATE TABLE Post (
	id VARCHAR(255),
	title VARCHAR(255),
	content VARCHAR(255),
	summary VARCHAR(255),
	tag VARCHAR(255),
	category VARCHAR(255),
	PRIMARY KEY (id),
	FOREIGN KEY (tag) REFERENCES Tag(id),
	FOREIGN KEY (category) REFERENCES Category(id)
);
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Post (NO REFERENCES)
SELECT id, title, content, summary FROM Post;
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Post (NO REFERENCES) WHERE THE PRIMARY KEY IS EQUAL TO SOMETHING
SELECT id, title, content, summary FROM Post WHERE id = ?;
-- GENERATED CREATE TABLE STATMENT FOR THE ENTITY Tag
CREATE TABLE Tag (
	id VARCHAR(255),
	tag_name VARCHAR(255),
	PRIMARY KEY (id)
);
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Tag (NO REFERENCES)
SELECT id, tag_name FROM Tag;
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Tag (NO REFERENCES) WHERE THE PRIMARY KEY IS EQUAL TO SOMETHING
SELECT id, tag_name FROM Tag WHERE id = ?;
-- GENERATED CREATE TABLE STATMENT FOR THE ENTITY Category
CREATE TABLE Category (
	id VARCHAR(255),
	cat_name VARCHAR(255),
	PRIMARY KEY (id)
);
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Category (NO REFERENCES)
SELECT id, cat_name FROM Category;
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Category (NO REFERENCES) WHERE THE PRIMARY KEY IS EQUAL TO SOMETHING
SELECT id, cat_name FROM Category WHERE id = ?;
-- GENERATED CREATE TABLE STATMENT FOR THE ENTITY Comment
CREATE TABLE Comment (
	id VARCHAR(255),
	comment_content VARCHAR(255),
	post VARCHAR(255),
	PRIMARY KEY (id),
	FOREIGN KEY (post) REFERENCES Post(id)
);
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Comment (NO REFERENCES)
SELECT id, comment_content FROM Comment;
-- SELECTING ALL THE ATTRBUTES FROM THE ENTITY Comment (NO REFERENCES) WHERE THE PRIMARY KEY IS EQUAL TO SOMETHING
SELECT id, comment_content FROM Comment WHERE id = ?;
